@page "/"
@using TelegramMiniApp.Services;
@inject TelegramService TelegramService
@inject NavigationManager NavigationManager

@inject TelegramService TelegramService

<h1>Telegram Mini App</h1>

<div class="container-bg"></div>

<div class="container">
    <div class="row mb-3">
        <div class="col">
            <button class="btn btn-primary" @onclick="ShowUserName">Показать имя пользователя</button>
        </div>
    </div>

    <div class="row mb-3">
        <div class="col">
            <button class="btn btn-primary" @onclick="ShowCounter">Показать страницу счетчика</button>
        </div>
    </div>

    <div class="row mb-3">
        <div class="col">
            <button class="btn btn-primary" @onclick="ShowWeather">Показать погоду</button>
        </div>
    </div>

    @if (!string.IsNullOrEmpty(_username))
    {
        <div class="alert alert-info">
            Привет, @_username!
        </div>
    }
</div>

@code {
    private string _username;

    protected override async Task OnInitializedAsync()
    {
        await TelegramService.InitializeAsync();
    }

    private async Task ShowUserName()
    {
        try
        {
            _username = await TelegramService.GetUserName();
            await TelegramService.ShowAlert($"Ваше имя пользователя: {_username}");
        }
        catch (Exception ex)
        {
            await TelegramService.ShowAlert($"Ошибка: {ex.Message}");
        }
    }

    private async Task ShowCounter()
    {
        try
        {
            NavigationManager.NavigateTo("/TelegramMiniApp/counter");
        }
        catch
        {
            Console.WriteLine("Error");
        }
    }

    private async Task ShowWeather() {
        try {
            NavigationManager.NavigateTo("/TelegramMiniApp/weather");
        }
        catch {
            Console.WriteLine("Error");
        }
    }
}